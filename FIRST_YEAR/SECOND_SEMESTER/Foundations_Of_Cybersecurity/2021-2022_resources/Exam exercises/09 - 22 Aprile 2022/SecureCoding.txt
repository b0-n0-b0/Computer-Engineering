Find and explain the vulnerabilities of the following function.
Then, patch the vulnerabilities.
There can be zero, one, or more vulnerabilities.

unsigned int do_stuff(unsigned int a, unsigned int b){
    if(a*b>UINT_MAX){
        /*Handle Error*/}
    return a*b;
}


Solution
The problem is wraparound.
The error condition is poorly written since if a*b will wrap-around, the if clause will never be true.
The following patch must be applied.

unsigned int do_stuff(unsigned int a, unsigned int b){
    if(b!=0 && a>UINT_MAX/b){
        /*Handle Error*/}
    return a*b;
}

WARNING! The if clause cannot be written in the inverse order (a>UINT_MAX/b WILL raise an error if b is zero!)
